#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Screw_tilt_adjust if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro newPRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  #BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for Trident (screw_tilt_adjust)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  #SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  #STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  #bed_mesh_calibrate                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position

[gcode_macro PRINT_START]
gcode:
    log_verbose msg="Print start"
    {% set extruderTemp = params.EXTRUDER|int %}  # Extruder temperature
    {% set bedTemp = params.BED|int %}            # Heated bed temperature
    #{% if extruderTemp > 220 %}
    {% set chamberTemp = params.CHAMBER|default(0)|int %}   # Heatsoaking duration in minutes, default is 10 minutes
    #{% else %}
    #  {% set DWELL = 0 %}
    #{% endif %}
    
    STATUS_PRINT_START 
    LOG_DEBUG MSG="start parameters EXTRUDER={extruderTemp}, BEW={bedTemp}, CHAMBER={chamberTemp}}"
    
    STATUS_HEATING
    M104 S{extruderTemp|float*0.50}     # Set extruder temperature to 50% of the print temperature to soften filament on nozzle
    M140 S{bedTemp}                     # Set bed temperature
    CG28                                # Homing
    G0 Z100                             # Move toolhead higher up
    M106 S51                            # Set part cooling fan to 25%
    M190 S{bedTemp}                     # Wait for bed to come to temperature
    G4 P{chamberTemp*60000}                   # Heatsoak to let the bed settle
    M106 S0                             # Reset fan to 0%
    STATUS_HOMING
    G28 Z0                              # Homing Z
    STATUS_MESHING
    BED_MESH_CALIBRATE                  # Create a mesh
    M104 S{extruderTemp}                # Set extruder to printing temperature
    G90                                 # Absolute positioning
    M83                                 # Extruder relative positioning
    STATUS_PRINTING
    #NEOPIXEL_DISPLAY LED="led_status" TYPE=print_percent MODE=progress
    PRIME_LINE EXTRUDER_TEMP={extruderTemp} # Create a prime line
    log_verbose msg="print start done"

[gcode_macro PRIME_LINE]
gcode:
    log_verbose msg="PRIME_LINE start"
    # settings
    {% set prime = {
      'X'      : 5,       # Prime line starting X coordinate / ##change this value##
      'Y'      : -5,      # Prime line starting Y coordinate / ##change this value##
      'length' : 120,     # Prime line length                / ##change this value##
      'purge'  : 8        # Prime line intial purge in mm    / ##change this value##
    } %}
    
    {% set extruderTemp = params.EXTRUDER_TEMP|float %}
    {% set primeHeight = printer.configfile.config['extruder'].nozzle_diameter|float %}
 
    G90                                                     # Absolute positioning
    G0 X{prime.X} Y{prime.Y} Z{primeHeight*0.75} F6000      # Move to print line starting coordinates               
    M109 S{extruderTemp}                                    # Set nozzle to printing temperature and wait
    G92 E0                                                  # Reset extruder
    M83                                                     # Relative extruder positioning
    G1 E{prime.purge} F300                                  # Making a blob
    G91                                                     # Relative positioning
    G1 X{prime.length} E{prime.length / 4} F1200            # First prime line
    G0 Y1                                                   # Move 1mm up in Y
    G1 X{20 - prime.length} E{(prime.length / 4) - 5} F1200 # Second prime line
    G1 Z1 E-0.75 F1200                                      # Retracting
    G92 E0                                                  # Reset extruder
    G90                                                     # Absolute positioning
    M83                                                     # Relative extruder positioning
    log_verbose msg="PRIME_LINE end"

[gcode_macro PRINT_END]
gcode:
    log_verbose msg="PRINT_END start"
    M106 S255                                                                   # Blast PC fan to prevent oozing
    SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=3000 SQUARE_CORNER_VELOCITY=8  # Reset acceleration
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-25.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    #M104 S0                          ; turn off hotend
    #M140 S0                          ; turn off bed
    #M106 S0                          ; turn off fan
    G90                              ; absolute positioning

    #G91                                                                         # Relative positioning
    #G0 Z15 E-0.75 F1800                                                         # Move toolhead 15mm up to prevent colliding with the print
    #G1 E-25 F1800                                                               # Retract 5mm of filament to prevent oozing and 20 to be able to swap filament
    #G90                                                                         # Absolute positioning
    #G0 X250 Y220 F9000                                                          # Present print
    TURN_OFF_HEATERS                                                            # Turn off bed and extruder
    DISABLE_MOTORS                                                              # Disabling the motors
    M221 S100                                                                   # Reset flow to 100%
    M220 S100                                                                   # Reset speed to 100%
    BED_MESH_CLEAR                                                              # Clear the bed mesh
    G4 P30000                                                                   # Wait 30 seconds for the fan to cool down the nozzle
    M106 S0                                                                     # Turn off PC fan
    log_verbose msg="PRINT_END end"

[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        #SET_FILAMENT_SENSOR SENSOR=filament_motion_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause
    M106 S51
    G1 E-100 F1800       ; Retract filament to be able to swap it
