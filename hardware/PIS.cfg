[mcu PIS]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66160F423759137-if00

[adxl345]
cs_pin: PIS:gpio13
#spi_bus: spi1a
spi_software_sclk_pin: PIS:gpio10
spi_software_mosi_pin: PIS:gpio11
spi_software_miso_pin: PIS:gpio12
axes_map: x,-z,y

[resonance_tester]
#accel_chip: adxl345 usbadxl
accel_chip: adxl345 
probe_points:
    175,175,20

[gcode_macro RESONANCES_CALIBRATE]
gcode:
    LOG_INFORMATION MSG="Starting RESONANCES_CALIBRATE"
    # Home and get position for comparison later:
    G28
    # QGL if not already QGLd (only if QGL section exists in config)
    {% if printer.configfile.settings.quad_gantry_level %}
        {% if printer.quad_gantry_level.applied == False %}
            LOG_VERBOSE MSG="QUAD_GANTRY_LEVEL"
            QUAD_GANTRY_LEVEL
            G28 Z
        {% endif %}
    {% endif %} 
    # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
    LOG_VERBOSE MSG="G90"
    G90
    LOG_VERBOSE MSG="G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F9000"
    G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F9000
    LOG_VERBOSE MSG="G28 X Y"
    G28 X Y
    LOG_VERBOSE MSG="G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F9000"
    G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F9000
    LOG_VERBOSE MSG="Wait for a second"
    G4 P1000 

    # Go to starting position
    LOG_VERBOSE MSG="G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z30 F9000"
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z30 F9000
    LOG_VERBOSE MSG="TEST_RESONANCES AXIS=X"
    TEST_RESONANCES AXIS=X
    LOG_VERBOSE MSG="TEST_RESONANCES AXIS=Y"
    TEST_RESONANCES AXIS=Y
    LOG_VERBOSE MSG="GENERATE_CALIBRATION_GRAPHS for X"
    GENERATE_CALIBRATION_GRAPHS AXIS=X
    LOG_VERBOSE MSG="GENERATE_CALIBRATION_GRAPHS for Y"
    GENERATE_CALIBRATION_GRAPHS AXIS=Y
    LOG_VERBOSE MSG="End of RESONANCES_CALIBRATE"

[gcode_macro GENERATE_CALIBRATION_GRAPHS]
gcode:
    {% set target_axis = params.AXIS %}
    {% if target_axis == 'X' %}
      LOG_VERBOSE MSG="GENERATE_CALIBRATION_GRAPHS_X"
      RUN_SHELL_COMMAND CMD=GENERATE_CALIBRATION_GRAPHS_X
    {% elif target_axis == 'Y' %}
      LOG_VERBOSE MSG="GENERATE_CALIBRATION_GRAPHS_Y"
      RUN_SHELL_COMMAND CMD=GENERATE_CALIBRATION_GRAPHS_Y
    {% else %}
      LOG_WARNING MSG="Unknown parrameter!!! AXIS={params.AXIS}"
    {% endif %}

[gcode_shell_command GENERATE_CALIBRATION_GRAPHS_X]
command: ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
timeout: 90
verbose: True

[gcode_shell_command GENERATE_CALIBRATION_GRAPHS_Y]
command: ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
timeout: 90
verbose: True